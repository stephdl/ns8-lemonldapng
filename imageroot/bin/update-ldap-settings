#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#
import agent
import sys
import os
import subprocess

schema = agent.read_envfile("discovery_ldap.env").get("LDAP_SCHEMA", "")
ldap_base = agent.read_envfile("discovery_ldap.env").get("LDAP_BASE", "")
ldap_pass = agent.read_envfile("discovery_ldap.env").get("LDAP_PASS", "")
ldap_host = "10.0.2.2"
ldap_user = agent.read_envfile("discovery_ldap.env").get("LDAP_USER", "")
ldap_port = agent.read_envfile("discovery_ldap.env").get("LDAP_PORT", "")

if ldap_pass == "invalid":
    print ("LDAP settings are invalid", file=sys.stderr)
    sys.exit(0)

if schema == "rfc2307":
    print ("Setting LDAP settings for RFC2307 schema", file=sys.stderr)
    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "set", "authentication", "LDAP", "passwordDB", "LDAP", "userDB", "LDAP", "registerDB", "Null", "ldapServer", "ldap://" + ldap_host+':'+ldap_port, "ldapVerify", "none", "ldapBase", ldap_base , "managerDn",  ldap_user, "managerPassword", ldap_pass]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "set", "ldapGroupBase", "ou=Groups,"+ ldap_base, "ldapGroupObjectClass", "posixGroup", "groupLDAPFilter", "(objectClass=posixGroup)","ldapGroupAttributeName", "memberUid", "ldapGroupAttributeNameUser", "uid", "ldapGroupAttributeNameSearch", "cn", "ldapGroupRecursive", "1", "ldapGroupAttributeNameGroup", "dn"]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey", "ldapExportedVars", "uid", "uid", "ldapExportedVars", "cn", "cn", "ldapExportedVars", "mail", "mail"]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "delKey", "locationRules/", "manager."+os.environ['TRAEFIK_HOST']]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey", "locationRules/manager."+os.environ['TRAEFIK_HOST'], "default", '$uid eq administrator or inGroup("domain admins")']
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

elif schema == "ad":
    print ("Setting LDAP settings for AD schema", file=sys.stderr)
    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "set", "authentication", "AD", "passwordDB", "AD", "userDB", "AD", "registerDB", "Null", "ldapServer", "ldap://" + ldap_host+':'+ldap_port, "ldapVerify", "none", "ldapBase", ldap_base , "managerDn",  ldap_user, "managerPassword", ldap_pass]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "set", "ldapGroupBase", ldap_base, "ldapGroupObjectClass", "group", "groupLDAPFilter", "(objectClass=group)","ldapGroupAttributeName", "member", "ldapGroupAttributeNameUser", "dn", "ldapGroupAttributeNameSearch", "cn", "ldapGroupRecursive", "1", "ldapGroupDecodeSearchedValue", "1", "ldapGroupAttributeNameGroup", "dn"]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey", "ldapExportedVars", "uid", "sAMAccountName", "ldapExportedVars", "cn", "displayName", "ldapExportedVars", "mail", "mail"]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "delKey", "locationRules/", "manager."+os.environ['TRAEFIK_HOST']]
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)

    command = ["podman", "exec", "lemonldapng-app", "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey", "locationRules/manager."+os.environ['TRAEFIK_HOST'], "default", '$uid eq administrator or inGroup("domain admins")']
    subprocess.run(command, stderr=subprocess.DEVNULL, check=True)
